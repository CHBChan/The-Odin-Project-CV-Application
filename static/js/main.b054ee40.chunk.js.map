{"version":3,"sources":["PersonalInfo.js","Experience.js","Education.js","CV.js","App.js","index.js"],"names":["PersonalInfo","_React$Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","fname","lname","email","phone","mode","onChangeMode","bind","_assertThisInitialized","onButtonPress","fnameRef","React","createRef","lnameRef","emailRef","phoneRef","_inherits","_createClass","key","value","new_mode","btn","document","querySelector","innerHTML","setState","_objectSpread","_this2","current","console","log","createElement","Fragment","className","type","ref","defaultValue","onClick","Component","Experience","props","title","comp","start_date","end_date","desc","titleRef","compRef","sdRef","edRef","descRef","getElementById","concat","uuid","Date","toISOString","substring","id","removeExperience","_this3","placeholder","remove","Education","school","degree","schoolRef","degreeRef","removeEducation","CV","id1","uuidv4","id2","experience_list","education_list","onAddComponent","arr","forEach","push","filter","component","_toConsumableArray","App","apply","arguments","ReactDOM","createRoot","render","HashRouter","base"],"mappings":"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","file":"static/js/main.b054ee40.chunk.js","sourcesContent":["import React from \"react\";\n\nclass PersonalInfo extends React.Component {\n\n    constructor() {\n\n        super();\n\n        this.state = {\n\n            fname: 'John',\n            lname: 'Doe',\n            email: 'jdoe@gmail.com',\n            phone: '111-222-3333',\n            mode: 'preview'\n        };\n\n        this.onChangeMode = this.onChangeMode.bind(this);\n        this.onButtonPress = this.onButtonPress.bind(this);\n\n        this.fnameRef = React.createRef();\n        this.lnameRef = React.createRef();\n        this.emailRef = React.createRef();\n        this.phoneRef = React.createRef();\n    }\n\n    onChangeMode() {\n\n        let btn = document.querySelector('.personal_btn');\n        let new_mode;\n        if(this.state.mode === 'preview') {\n\n            new_mode = 'edit';\n            btn.innerHTML = 'Submit';\n        }\n        else {\n\n            new_mode = 'preview';\n            btn.innerHTML = 'Edit';\n        }\n\n        this.setState({\n\n            ...this.state,\n            mode: new_mode\n        });\n    }\n\n    onButtonPress() {\n\n        if(this.state.mode === 'edit') {\n\n            let fname = this.fnameRef.current.value;\n            let lname = this.lnameRef.current.value;\n            let email = this.emailRef.current.value;\n            let phone = this.phoneRef.current.value;\n\n            this.setState({\n\n                fname: fname,\n                lname: lname,\n                email: email,\n                phone: phone\n            },() => {\n    \n                this.onChangeMode();\n            });\n        }\n        else {\n\n            this.onChangeMode();\n        }\n        console.log(this.state);\n    }\n\n    render() {\n\n        return (\n\n            <>\n                <div className = 'fname_field'>\n                    {this.state.mode === 'preview' && <p>{this.state.fname}</p>}\n                    {this.state.mode === 'edit' && <input type = \"text\" ref = {this.fnameRef} defaultValue = {this.state.fname}></input>}\n                </div>\n                <div className = 'lname_field'>\n                    {this.state.mode === 'preview' && <p>{this.state.lname}</p>}\n                    {this.state.mode === 'edit' && <input type = \"text\" ref = {this.lnameRef} defaultValue = {this.state.lname}></input>}\n                </div>\n                <div className = 'email_field'>\n                    {this.state.mode === 'preview' && <p>{this.state.email}</p>}\n                    {this.state.mode === 'edit' && <input type = \"text\" ref = {this.emailRef} defaultValue = {this.state.email}></input>}\n                </div>\n                <div className = 'phone_field'>\n                    {this.state.mode === 'preview' && <p>{this.state.phone}</p>}\n                    {this.state.mode === 'edit' && <input type = \"text\" ref = {this.phoneRef} defaultValue = {this.state.phone}></input>}\n                </div>\n                <button className = 'personal_btn' onClick={this.onButtonPress}>Edit</button>\n            </>\n        );\n    }\n}\n\nexport default PersonalInfo;","import React from 'react';\n\nclass Experience extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n            title: '',\n            comp: '',\n            start_date: '',\n            end_date: '',\n            desc: '',\n            mode: 'edit'\n        };\n\n        this.onChangeMode = this.onChangeMode.bind(this);\n        this.onButtonPress = this.onButtonPress.bind(this);\n\n        this.titleRef = React.createRef();\n        this.compRef = React.createRef();\n        this.sdRef = React.createRef();\n        this.edRef = React.createRef();\n        this.descRef = React.createRef();\n    }\n\n    onChangeMode() {\n\n        let btn = document.getElementById(`${this.props.uuid}`);\n        let new_mode;\n        if(this.state.mode === 'preview') {\n\n            new_mode = 'edit';\n            btn.innerHTML = 'Save';\n        }\n        else {\n\n            new_mode = 'preview';\n            btn.innerHTML = 'Edit';\n        }\n\n        this.setState({\n\n            ...this.state,\n            mode: new_mode\n        });\n    }\n\n    onButtonPress() {\n\n        if(this.state.mode === 'edit') {\n\n            let title = this.titleRef.current.value;\n            let comp = this.compRef.current.value;\n            let start_date = this.sdRef.current.value;\n            let end_date = this.edRef.current.value;\n            let desc = this.descRef.current.value;\n\n            this.setState({\n\n                title: title,\n                comp: comp,\n                start_date: start_date,\n                end_date: end_date,\n                desc: desc\n            },() => {\n    \n                this.onChangeMode();\n            });\n        }\n        else {\n\n            this.onChangeMode();\n        }\n        console.log(this.state);\n    }\n\n    getDate() {\n\n        let date = new Date();\n        let str = date.toISOString().substring(0, 10);\n\n        return str;\n    }\n\n    remove(id) {\n\n        this.props.removeExperience(id);\n    }\n\n    render() {\n\n        return (\n\n            <div className = 'experience'>\n                <div className = 'title_field'>\n                    {this.state.mode === 'preview' && <p>{this.state.title}</p>}\n                    {this.state.mode === 'edit' && <input type = 'text' ref = {this.titleRef} placeholder = 'Job title' defaultValue = {this.state.title}></input>}\n                </div>\n                <div className = 'comp_field'>\n                    {this.state.mode === 'preview' && <p>{this.state.comp}</p>}\n                    {this.state.mode === 'edit' && <input type = 'text' ref = {this.compRef} placeholder = 'Employer' defaultValue = {this.state.comp}></input>}\n                </div>\n                <div className = 'sd_field'>\n                    <label>Start Date</label>\n                    {this.state.mode === 'preview' && <p>{this.state.start_date}</p>}\n                    {this.state.mode === 'edit' && <input type = 'date' ref = {this.sdRef} defaultValue = {this.state.start_date}></input>}\n                </div>\n                <div className = 'ed_field'>\n                    <label>End Date</label>\n                    {this.state.mode === 'preview' && <p>{this.state.end_date}</p>}\n                    {this.state.mode === 'edit' && <input type = 'date' ref = {this.edRef} defaultValue = {this.state.end_date}></input>}\n                </div>\n                <div className = 'desc_field'>\n                    {this.state.mode === 'preview' && <p>{this.state.desc}</p>}\n                    {this.state.mode === 'edit' && <input type = 'text' ref = {this.descRef} placeholder = 'General responsibilities' defaultValue = {this.state.desc}></input>}\n                </div>\n                <button onClick = {() => {this.onButtonPress()}} id = {this.props.uuid}>Save</button>\n                <button onClick = {() => {this.remove(this.props.uuid)}}>Remove</button>\n            </div>\n        );\n    }\n}\n\nexport default Experience;","import React from 'react';\n\nclass Education extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n            school: '',\n            degree: '',\n            start_date: '',\n            end_date: '',\n            mode: 'edit'\n        };\n\n        this.onChangeMode = this.onChangeMode.bind(this);\n        this.onButtonPress = this.onButtonPress.bind(this);\n\n        this.schoolRef = React.createRef();\n        this.degreeRef = React.createRef();\n        this.sdRef = React.createRef();\n        this.edRef = React.createRef();\n    }\n\n    onChangeMode() {\n\n        let btn = document.getElementById(`${this.props.uuid}`);\n        let new_mode;\n        if(this.state.mode === 'preview') {\n\n            new_mode = 'edit';\n            btn.innerHTML = 'Save';\n        }\n        else {\n\n            new_mode = 'preview';\n            btn.innerHTML = 'Edit';\n        }\n\n        this.setState({\n\n            ...this.state,\n            mode: new_mode\n        });\n    }\n\n    onButtonPress() {\n\n        if(this.state.mode === 'edit') {\n\n            let school = this.schoolRef.current.value;\n            let degree = this.degreeRef.current.value;\n            let start_date = this.sdRef.current.value;\n            let end_date = this.edRef.current.value;\n\n            this.setState({\n\n                school: school,\n                degree: degree,\n                start_date: start_date,\n                end_date: end_date\n            },() => {\n    \n                this.onChangeMode();\n            });\n        }\n        else {\n\n            this.onChangeMode();\n        }\n        console.log(this.state);\n    }\n\n    getDate() {\n\n        let date = new Date();\n        let str = date.toISOString().substring(0, 10);\n\n        return str;\n    }\n\n    remove(id) {\n\n        this.props.removeEducation(id);\n    }\n\n    render() {\n\n        return (\n\n            <div className = 'education'>\n                <div className = 'school_field'>\n                    {this.state.mode === 'preview' && <p>{this.state.school}</p>}\n                    {this.state.mode === 'edit' && <input type = 'text' ref = {this.schoolRef} placeholder = 'Accredited Institution' defaultValue = {this.state.school}></input>}\n                </div>\n                <div className = 'degree_field'>\n                    {this.state.mode === 'preview' && <p>{this.state.degree}</p>}\n                    {this.state.mode === 'edit' && <input type = 'text'  ref = {this.degreeRef} placeholder = 'Degree obtained' defaultValue = {this.state.degree}></input>}\n                </div>\n                <div className = 'start_date_field'>\n                    <label>Start Date</label>\n                    {this.state.mode === 'preview' && <p>{this.state.start_date}</p>}\n                    {this.state.mode === 'edit' && <input type = 'date' ref = {this.sdRef} defaultValue = {this.state.start_date}></input>}\n                </div>\n                <div className = 'end_date_field'>\n                    <label>End Date</label>\n                    {this.state.mode === 'preview' && <p>{this.state.end_date}</p>}\n                    {this.state.mode === 'edit' && <input type = 'date' ref = {this.edRef} defaultValue = {this.state.end_date}></input>}\n                </div>\n                <button onClick = {() => {this.onButtonPress()}} id = {this.props.uuid}>Save</button>\n                <button onClick = {() => {this.remove(this.props.uuid)}}>Remove</button>\n            </div>\n        );\n    }\n}\n\nexport default Education;","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PersonalInfo from './PersonalInfo.js';\nimport Experience from './Experience.js';\nimport Education from './Education.js';\n\nclass CV extends React.Component {\n\n    constructor() {\n\n        super();\n\n        let id1 = uuidv4();\n        let id2 = uuidv4();\n\n        this.state = {\n\n            experience_list: [<Experience key = {id1} uuid = {id1} removeExperience = {this.removeExperience.bind(this)}/>],\n            education_list: [<Education key = {id2} uuid = {id2} removeEducation = {this.removeEducation.bind(this)}/>]\n        };\n\n        this.onAddComponent = this.onAddComponent.bind(this);\n    }\n\n    removeExperience(id) {\n\n        let arr = [];\n\n        this.state.experience_list.forEach(comp => {\n\n            arr.push(comp.props.uuid);\n        });\n        console.log(arr);\n\n        this.setState({\n\n            experience_list: this.state.experience_list.filter(component => component.props.uuid !== id)\n        })\n    }\n\n    removeEducation(id) {\n\n        this.setState({\n\n            education_list: this.state.education_list.filter(component => component.props.uuid !== id)\n        })\n    }\n\n    onAddComponent(type) {\n\n        let id = uuidv4();\n\n        if(type === 'exp') {\n\n            this.setState({\n\n                experience_list: [...this.state.experience_list, <Experience key = {id} uuid = {id} removeExperience = {this.removeExperience.bind(this)}/>]\n            });\n        }\n        else {\n\n            this.setState({\n\n                education_list: [...this.state.education_list, <Education key = {id} uuid = {id} removeEducation = {this.removeEducation.bind(this)}/>]\n            });\n        }\n    }\n\n    render() {\n\n        return (\n            \n            <>\n                <div className = 'topbar'>\n                    <p>CV Application</p>\n                </div>\n                <div className = 'CV'>\n                    <div className = 'personal_info'>\n                        <PersonalInfo />\n                    </div>\n                    <div className = 'experience_info'>\n                        {this.state.experience_list}\n                    </div>\n                    <button className = 'add_experience' onClick = {() => {this.onAddComponent('exp')}}>Add Experience</button>\n                    <div className = 'education_info'>\n                        {this.state.education_list}\n                    </div>\n                    <button className = 'add_education' onClick = {() => {this.onAddComponent('edu')}}>Add Education</button>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default CV;","import React from 'react';\nimport CV from './CV.js';\nimport './App.css';\n\nclass App extends React.Component {\n\n  render() {\n\n    return <CV />\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <HashRouter base=\"/\">\n    <App />\n  </HashRouter>\n);"],"sourceRoot":""}